size(400, 400)
background(1)

import json
track_listensData = []
frame = 0

def setup():
    global track_listensData, frame
    with open('DM_tracks_data.json') as infile:
        track_listensData = json.load(infile)
    print len(track_listensData)
    print track_listensData[0]

def mapValue(value, fromMin, fromMax, toMin, toMax):
    # Figure out how 'wide' each range is
    fromSpan = fromMax - fromMin
    toSpan = toMax - toMin
    
    # Convert the from range into a 0-1 range (float)
    valueScaled = float(value - fromMin) / float(fromSpan)
    
    # Convert the 0-1 range into a value in the to range.
    return toMin + (valueScaled * toSpan)

def wave(marginx, y, amp, lamb, width, strokec):
    num = width / lamb
    for i in range(num):
        x = marginx + (i * lamb)
        with bezier(x, y - amp, stroke=strokec, fill=None):
            x1 = x + lamb / 4
            x2 = x + lamb / 2
            y1 = y - amp
            y2 = y + amp
            curveto(x1, y1, x1, y2, x2, y2)
            x1 = x + ((lamb / 4) * 3)
            x2 = x + lamb
            y1 = y + amp
            y2 = y - amp
            curveto(x1, y1, x1, y2, x2, y2)	

def draw():
    global track_listensData, frame
    # Start drawing at the top (y = 0)
    y = 0
    x = 200
    # Only limit on the first 20
    for i, word in enumerate(track_listensData[:8]):
    		# draw each line 22 pixels lower
        y = y 
        x = x + 60
        # calculate the width of the bar sensibly (1150 / 3 for the widest bar)
        listens = word['track_listens']
        downloads = word['track_downloads']
        interest = word['track_interest']
        # barwidth = listens # mapValue()
    		# draw each frequency as a bar graph
    		
    	if frame < 100:
            barwidth = int(mapValue(frame, 0, 100, listens, downloads))
        elif frame < 200:
            barwidth = int(mapValue(frame, 100, 200, downloads, interest))
        elif frame < 300:
            barwidth = int(mapValue(frame, 200, 300, interest, listens))
        if frame >= 300:
            barwidth = listens
            frame = 0
        
        marginx = 70
        y = 200
        amp = 40
        lamb = 200
        stroke(0.2)
        nofill()
        col = color(i * 0.1)
        if barwidth == 0:
            barwidth = 1
        wave(marginx, y, barwidth, barwidth , 300, col)
        
        frame += 1
    

    
    

   